{"ast":null,"code":"/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Scrollbar.react\n * @typechecks\n */\n'use strict';\n\nvar DOMMouseMoveTracker = require('./DOMMouseMoveTracker');\n\nvar Keys = require('./Keys');\n\nvar React = require('./React');\n\nvar createReactClass = require('create-react-class');\n\nvar ReactDOM = require('./ReactDOM');\n\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\n\nvar ReactWheelHandler = require('./ReactWheelHandler');\n\nvar cssVar = require('./cssVar');\n\nvar cx = require('./cx');\n\nvar emptyFunction = require('./emptyFunction');\n\nvar translateDOMPositionXY = require('./translateDOMPositionXY');\n\nvar PropTypes = require('prop-types');\n\nvar UNSCROLLABLE_STATE = {\n  position: 0,\n  scrollable: false\n};\nvar FACE_MARGIN = parseInt(cssVar('scrollbar-face-margin'), 10);\nvar FACE_MARGIN_2 = FACE_MARGIN * 2;\nvar FACE_SIZE_MIN = 30;\nvar KEYBOARD_SCROLL_AMOUNT = 40;\nvar _lastScrolledScrollbar = null;\nvar Scrollbar = createReactClass({\n  mixins: [ReactComponentWithPureRenderMixin],\n  propTypes: {\n    contentSize: PropTypes.number.isRequired,\n    defaultPosition: PropTypes.number,\n    isOpaque: PropTypes.bool,\n    orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n    onScroll: PropTypes.func,\n    position: PropTypes.number,\n    size: PropTypes.number.isRequired,\n    trackColor: PropTypes.oneOf(['gray']),\n    zIndex: PropTypes.number,\n    verticalTop: PropTypes.number\n  },\n  getInitialState: function getInitialState()\n  /*object*/\n  {\n    var props = this.props;\n    return this._calculateState(props.position || props.defaultPosition || 0, props.size, props.contentSize, props.orientation);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(\n  /*object*/\n  nextProps) {\n    var controlledPosition = nextProps.position;\n\n    if (controlledPosition === undefined) {\n      this._setNextState(this._calculateState(this.state.position, nextProps.size, nextProps.contentSize, nextProps.orientation));\n    } else {\n      this._setNextState(this._calculateState(controlledPosition, nextProps.size, nextProps.contentSize, nextProps.orientation), nextProps);\n    }\n  },\n  getDefaultProps: function getDefaultProps()\n  /*object*/\n  {\n    return {\n      defaultPosition: 0,\n      isOpaque: false,\n      onScroll: emptyFunction,\n      orientation: 'vertical',\n      zIndex: 99\n    };\n  },\n  render: function render()\n  /*?object*/\n  {\n    if (!this.state.scrollable) {\n      return null;\n    }\n\n    var size = this.props.size;\n    var mainStyle;\n    var faceStyle;\n    var isHorizontal = this.state.isHorizontal;\n    var isVertical = !isHorizontal;\n    var isActive = this.state.focused || this.state.isDragging;\n    var faceSize = this.state.faceSize;\n    var isOpaque = this.props.isOpaque;\n    var verticalTop = this.props.verticalTop || 0;\n    var mainClassName = cx({\n      'ScrollbarLayout/main': true,\n      'ScrollbarLayout/mainVertical': isVertical,\n      'ScrollbarLayout/mainHorizontal': isHorizontal,\n      'public/Scrollbar/main': true,\n      'public/Scrollbar/mainOpaque': isOpaque,\n      'public/Scrollbar/mainActive': isActive\n    });\n    var faceClassName = cx({\n      'ScrollbarLayout/face': true,\n      'ScrollbarLayout/faceHorizontal': isHorizontal,\n      'ScrollbarLayout/faceVertical': isVertical,\n      'public/Scrollbar/faceActive': isActive,\n      'public/Scrollbar/face': true\n    });\n    var position = this.state.position * this.state.scale + FACE_MARGIN;\n\n    if (isHorizontal) {\n      mainStyle = {\n        width: size\n      };\n      faceStyle = {\n        width: faceSize - FACE_MARGIN_2\n      };\n      translateDOMPositionXY(faceStyle, position, 0);\n    } else {\n      mainStyle = {\n        top: verticalTop,\n        height: size\n      };\n      faceStyle = {\n        height: faceSize - FACE_MARGIN_2\n      };\n      translateDOMPositionXY(faceStyle, 0, position);\n    }\n\n    mainStyle.zIndex = this.props.zIndex;\n\n    if (this.props.trackColor === 'gray') {\n      mainStyle.backgroundColor = cssVar('fbui-desktop-background-light');\n    }\n\n    return React.createElement('div', {\n      onFocus: this._onFocus,\n      onBlur: this._onBlur,\n      onKeyDown: this._onKeyDown,\n      onMouseDown: this._onMouseDown,\n      onWheel: this._wheelHandler.onWheel,\n      className: mainClassName,\n      style: mainStyle,\n      tabIndex: 0\n    }, React.createElement('div', {\n      ref: 'face',\n      className: faceClassName,\n      style: faceStyle\n    }));\n  },\n  componentWillMount: function componentWillMount() {\n    var isHorizontal = this.props.orientation === 'horizontal';\n    var onWheel = isHorizontal ? this._onWheelX : this._onWheelY;\n    this._wheelHandler = new ReactWheelHandler(onWheel, this._shouldHandleX, // Should hanlde horizontal scroll\n    this._shouldHandleY // Should handle vertical scroll\n    );\n  },\n  componentDidMount: function componentDidMount() {\n    this._mouseMoveTracker = new DOMMouseMoveTracker(this._onMouseMove, this._onMouseMoveEnd, document.documentElement);\n\n    if (this.props.position !== undefined && this.state.position !== this.props.position) {\n      this._didScroll();\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this._nextState = null;\n\n    this._mouseMoveTracker.releaseMouseMoves();\n\n    if (_lastScrolledScrollbar === this) {\n      _lastScrolledScrollbar = null;\n    }\n\n    delete this._mouseMoveTracker;\n  },\n  scrollBy: function scrollBy(\n  /*number*/\n  delta) {\n    this._onWheel(delta);\n  },\n  _shouldHandleX: function _shouldHandleX(\n  /*number*/\n  delta)\n  /*boolean*/\n  {\n    return this.props.orientation === 'horizontal' ? this._shouldHandleChange(delta) : false;\n  },\n  _shouldHandleY: function _shouldHandleY(\n  /*number*/\n  delta)\n  /*boolean*/\n  {\n    return this.props.orientation !== 'horizontal' ? this._shouldHandleChange(delta) : false;\n  },\n  _shouldHandleChange: function _shouldHandleChange(\n  /*number*/\n  delta)\n  /*boolean*/\n  {\n    var nextState = this._calculateState(this.state.position + delta, this.props.size, this.props.contentSize, this.props.orientation);\n\n    return nextState.position !== this.state.position;\n  },\n  _calculateState: function _calculateState(\n  /*number*/\n  position,\n  /*number*/\n  size,\n  /*number*/\n  contentSize,\n  /*string*/\n  orientation)\n  /*object*/\n  {\n    if (size < 1 || contentSize <= size) {\n      return UNSCROLLABLE_STATE;\n    }\n\n    var stateKey = position + '_' + size + '_' + contentSize + '_' + orientation;\n\n    if (this._stateKey === stateKey) {\n      return this._stateForKey;\n    } // There are two types of positions here.\n    // 1) Phisical position: changed by mouse / keyboard\n    // 2) Logical position: changed by props.\n    // The logical position will be kept as as internal state and the `render()`\n    // function will translate it into physical position to render.\n\n\n    var isHorizontal = orientation === 'horizontal';\n    var scale = size / contentSize;\n    var faceSize = size * scale;\n\n    if (faceSize < FACE_SIZE_MIN) {\n      scale = (size - FACE_SIZE_MIN) / (contentSize - size);\n      faceSize = FACE_SIZE_MIN;\n    }\n\n    var scrollable = true;\n    var maxPosition = contentSize - size;\n\n    if (position < 0) {\n      position = 0;\n    } else if (position > maxPosition) {\n      position = maxPosition;\n    }\n\n    var isDragging = this._mouseMoveTracker ? this._mouseMoveTracker.isDragging() : false; // This function should only return flat values that can be compared quiclky\n    // by `ReactComponentWithPureRenderMixin`.\n\n    var state = {\n      faceSize: faceSize,\n      isDragging: isDragging,\n      isHorizontal: isHorizontal,\n      position: position,\n      scale: scale,\n      scrollable: scrollable\n    }; // cache the state for later use.\n\n    this._stateKey = stateKey;\n    this._stateForKey = state;\n    return state;\n  },\n  _onWheelY: function _onWheelY(\n  /*number*/\n  deltaX,\n  /*number*/\n  deltaY) {\n    this._onWheel(deltaY);\n  },\n  _onWheelX: function _onWheelX(\n  /*number*/\n  deltaX,\n  /*number*/\n  deltaY) {\n    this._onWheel(deltaX);\n  },\n  _onWheel: function _onWheel(\n  /*number*/\n  delta) {\n    var props = this.props; // The mouse may move faster then the animation frame does.\n    // Use `requestAnimationFrame` to avoid over-updating.\n\n    this._setNextState(this._calculateState(this.state.position + delta, props.size, props.contentSize, props.orientation));\n  },\n  _onMouseDown: function _onMouseDown(\n  /*object*/\n  event) {\n    var nextState;\n\n    if (event.target !== ReactDOM.findDOMNode(this.refs.face)) {\n      // Both `offsetX` and `layerX` are non-standard DOM property but they are\n      // magically available for browsers somehow.\n      var nativeEvent = event.nativeEvent;\n      var position = this.state.isHorizontal ? nativeEvent.offsetX || nativeEvent.layerX : nativeEvent.offsetY || nativeEvent.layerY; // MouseDown on the scroll-track directly, move the center of the\n      // scroll-face to the mouse position.\n\n      var props = this.props;\n      position /= this.state.scale;\n      nextState = this._calculateState(position - this.state.faceSize * 0.5 / this.state.scale, props.size, props.contentSize, props.orientation);\n    } else {\n      nextState = {};\n    }\n\n    nextState.focused = true;\n\n    this._setNextState(nextState);\n\n    this._mouseMoveTracker.captureMouseMoves(event); // Focus the node so it may receive keyboard event.\n\n\n    ReactDOM.findDOMNode(this).focus();\n  },\n  _onMouseMove: function _onMouseMove(\n  /*number*/\n  deltaX,\n  /*number*/\n  deltaY) {\n    var props = this.props;\n    var delta = this.state.isHorizontal ? deltaX : deltaY;\n    delta /= this.state.scale;\n\n    this._setNextState(this._calculateState(this.state.position + delta, props.size, props.contentSize, props.orientation));\n  },\n  _onMouseMoveEnd: function _onMouseMoveEnd() {\n    this._nextState = null;\n\n    this._mouseMoveTracker.releaseMouseMoves();\n\n    this.setState({\n      isDragging: false\n    });\n  },\n  _onKeyDown: function _onKeyDown(\n  /*object*/\n  event) {\n    var keyCode = event.keyCode;\n\n    if (keyCode === Keys.TAB) {\n      // Let focus move off the scrollbar.\n      return;\n    }\n\n    var distance = KEYBOARD_SCROLL_AMOUNT;\n    var direction = 0;\n\n    if (this.state.isHorizontal) {\n      switch (keyCode) {\n        case Keys.HOME:\n          direction = -1;\n          distance = this.props.contentSize;\n          break;\n\n        case Keys.LEFT:\n          direction = -1;\n          break;\n\n        case Keys.RIGHT:\n          direction = 1;\n          break;\n\n        default:\n          return;\n      }\n    }\n\n    if (!this.state.isHorizontal) {\n      switch (keyCode) {\n        case Keys.SPACE:\n          if (event.shiftKey) {\n            direction = -1;\n          } else {\n            direction = 1;\n          }\n\n          break;\n\n        case Keys.HOME:\n          direction = -1;\n          distance = this.props.contentSize;\n          break;\n\n        case Keys.UP:\n          direction = -1;\n          break;\n\n        case Keys.DOWN:\n          direction = 1;\n          break;\n\n        case Keys.PAGE_UP:\n          direction = -1;\n          distance = this.props.size;\n          break;\n\n        case Keys.PAGE_DOWN:\n          direction = 1;\n          distance = this.props.size;\n          break;\n\n        default:\n          return;\n      }\n    }\n\n    event.preventDefault();\n    var props = this.props;\n\n    this._setNextState(this._calculateState(this.state.position + distance * direction, props.size, props.contentSize, props.orientation));\n  },\n  _onFocus: function _onFocus() {\n    this.setState({\n      focused: true\n    });\n  },\n  _onBlur: function _onBlur() {\n    this.setState({\n      focused: false\n    });\n  },\n  _blur: function _blur() {\n    if (this.isMounted()) {\n      try {\n        this._onBlur();\n\n        ReactDOM.findDOMNode(this).blur();\n      } catch (oops) {// pass\n      }\n    }\n  },\n  _setNextState: function _setNextState(\n  /*object*/\n  nextState,\n  /*?object*/\n  props) {\n    props = props || this.props;\n    var controlledPosition = props.position;\n    var willScroll = this.state.position !== nextState.position;\n\n    if (controlledPosition === undefined) {\n      var callback = willScroll ? this._didScroll : undefined;\n      this.setState(nextState, callback);\n    } else if (controlledPosition === nextState.position) {\n      this.setState(nextState);\n    } else {\n      // Scrolling is controlled. Don't update the state and let the owner\n      // to update the scrollbar instead.\n      if (nextState.position !== undefined && nextState.position !== this.state.position) {\n        this.props.onScroll(nextState.position);\n      }\n\n      return;\n    }\n\n    if (willScroll && _lastScrolledScrollbar !== this) {\n      _lastScrolledScrollbar && _lastScrolledScrollbar._blur();\n      _lastScrolledScrollbar = this;\n    }\n  },\n  _didScroll: function _didScroll() {\n    this.props.onScroll(this.state.position);\n  }\n});\nScrollbar.KEYBOARD_SCROLL_AMOUNT = KEYBOARD_SCROLL_AMOUNT;\nScrollbar.SIZE = parseInt(cssVar('scrollbar-size'), 10);\nmodule.exports = Scrollbar;","map":{"version":3,"sources":["C:/Versa/pagination/node_modules/fixed-data-table/internal/Scrollbar.react.js"],"names":["DOMMouseMoveTracker","require","Keys","React","createReactClass","ReactDOM","ReactComponentWithPureRenderMixin","ReactWheelHandler","cssVar","cx","emptyFunction","translateDOMPositionXY","PropTypes","UNSCROLLABLE_STATE","position","scrollable","FACE_MARGIN","parseInt","FACE_MARGIN_2","FACE_SIZE_MIN","KEYBOARD_SCROLL_AMOUNT","_lastScrolledScrollbar","Scrollbar","mixins","propTypes","contentSize","number","isRequired","defaultPosition","isOpaque","bool","orientation","oneOf","onScroll","func","size","trackColor","zIndex","verticalTop","getInitialState","props","_calculateState","componentWillReceiveProps","nextProps","controlledPosition","undefined","_setNextState","state","getDefaultProps","render","mainStyle","faceStyle","isHorizontal","isVertical","isActive","focused","isDragging","faceSize","mainClassName","faceClassName","scale","width","top","height","backgroundColor","createElement","onFocus","_onFocus","onBlur","_onBlur","onKeyDown","_onKeyDown","onMouseDown","_onMouseDown","onWheel","_wheelHandler","className","style","tabIndex","ref","componentWillMount","_onWheelX","_onWheelY","_shouldHandleX","_shouldHandleY","componentDidMount","_mouseMoveTracker","_onMouseMove","_onMouseMoveEnd","document","documentElement","_didScroll","componentWillUnmount","_nextState","releaseMouseMoves","scrollBy","delta","_onWheel","_shouldHandleChange","nextState","stateKey","_stateKey","_stateForKey","maxPosition","deltaX","deltaY","event","target","findDOMNode","refs","face","nativeEvent","offsetX","layerX","offsetY","layerY","captureMouseMoves","focus","setState","keyCode","TAB","distance","direction","HOME","LEFT","RIGHT","SPACE","shiftKey","UP","DOWN","PAGE_UP","PAGE_DOWN","preventDefault","_blur","isMounted","blur","oops","willScroll","callback","SIZE","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Scrollbar.react\n * @typechecks\n */\n\n'use strict';\n\nvar DOMMouseMoveTracker = require('./DOMMouseMoveTracker');\nvar Keys = require('./Keys');\nvar React = require('./React');\nvar createReactClass = require('create-react-class');\nvar ReactDOM = require('./ReactDOM');\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\nvar ReactWheelHandler = require('./ReactWheelHandler');\n\nvar cssVar = require('./cssVar');\nvar cx = require('./cx');\nvar emptyFunction = require('./emptyFunction');\nvar translateDOMPositionXY = require('./translateDOMPositionXY');\n\nvar PropTypes = require('prop-types');\n\nvar UNSCROLLABLE_STATE = {\n  position: 0,\n  scrollable: false\n};\n\nvar FACE_MARGIN = parseInt(cssVar('scrollbar-face-margin'), 10);\nvar FACE_MARGIN_2 = FACE_MARGIN * 2;\nvar FACE_SIZE_MIN = 30;\nvar KEYBOARD_SCROLL_AMOUNT = 40;\n\nvar _lastScrolledScrollbar = null;\n\nvar Scrollbar = createReactClass({\n  mixins: [ReactComponentWithPureRenderMixin],\n\n  propTypes: {\n    contentSize: PropTypes.number.isRequired,\n    defaultPosition: PropTypes.number,\n    isOpaque: PropTypes.bool,\n    orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n    onScroll: PropTypes.func,\n    position: PropTypes.number,\n    size: PropTypes.number.isRequired,\n    trackColor: PropTypes.oneOf(['gray']),\n    zIndex: PropTypes.number,\n    verticalTop: PropTypes.number\n  },\n\n  getInitialState: function getInitialState() /*object*/{\n    var props = this.props;\n    return this._calculateState(props.position || props.defaultPosition || 0, props.size, props.contentSize, props.orientation);\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps( /*object*/nextProps) {\n    var controlledPosition = nextProps.position;\n    if (controlledPosition === undefined) {\n      this._setNextState(this._calculateState(this.state.position, nextProps.size, nextProps.contentSize, nextProps.orientation));\n    } else {\n      this._setNextState(this._calculateState(controlledPosition, nextProps.size, nextProps.contentSize, nextProps.orientation), nextProps);\n    }\n  },\n\n  getDefaultProps: function getDefaultProps() /*object*/{\n    return {\n      defaultPosition: 0,\n      isOpaque: false,\n      onScroll: emptyFunction,\n      orientation: 'vertical',\n      zIndex: 99\n    };\n  },\n\n  render: function render() /*?object*/{\n    if (!this.state.scrollable) {\n      return null;\n    }\n\n    var size = this.props.size;\n    var mainStyle;\n    var faceStyle;\n    var isHorizontal = this.state.isHorizontal;\n    var isVertical = !isHorizontal;\n    var isActive = this.state.focused || this.state.isDragging;\n    var faceSize = this.state.faceSize;\n    var isOpaque = this.props.isOpaque;\n    var verticalTop = this.props.verticalTop || 0;\n\n    var mainClassName = cx({\n      'ScrollbarLayout/main': true,\n      'ScrollbarLayout/mainVertical': isVertical,\n      'ScrollbarLayout/mainHorizontal': isHorizontal,\n      'public/Scrollbar/main': true,\n      'public/Scrollbar/mainOpaque': isOpaque,\n      'public/Scrollbar/mainActive': isActive\n    });\n\n    var faceClassName = cx({\n      'ScrollbarLayout/face': true,\n      'ScrollbarLayout/faceHorizontal': isHorizontal,\n      'ScrollbarLayout/faceVertical': isVertical,\n      'public/Scrollbar/faceActive': isActive,\n      'public/Scrollbar/face': true\n    });\n\n    var position = this.state.position * this.state.scale + FACE_MARGIN;\n\n    if (isHorizontal) {\n      mainStyle = {\n        width: size\n      };\n      faceStyle = {\n        width: faceSize - FACE_MARGIN_2\n      };\n      translateDOMPositionXY(faceStyle, position, 0);\n    } else {\n      mainStyle = {\n        top: verticalTop,\n        height: size\n      };\n      faceStyle = {\n        height: faceSize - FACE_MARGIN_2\n      };\n      translateDOMPositionXY(faceStyle, 0, position);\n    }\n\n    mainStyle.zIndex = this.props.zIndex;\n\n    if (this.props.trackColor === 'gray') {\n      mainStyle.backgroundColor = cssVar('fbui-desktop-background-light');\n    }\n\n    return React.createElement(\n      'div',\n      {\n        onFocus: this._onFocus,\n        onBlur: this._onBlur,\n        onKeyDown: this._onKeyDown,\n        onMouseDown: this._onMouseDown,\n        onWheel: this._wheelHandler.onWheel,\n        className: mainClassName,\n        style: mainStyle,\n        tabIndex: 0 },\n      React.createElement('div', {\n        ref: 'face',\n        className: faceClassName,\n        style: faceStyle\n      })\n    );\n  },\n\n  componentWillMount: function componentWillMount() {\n    var isHorizontal = this.props.orientation === 'horizontal';\n    var onWheel = isHorizontal ? this._onWheelX : this._onWheelY;\n\n    this._wheelHandler = new ReactWheelHandler(onWheel, this._shouldHandleX, // Should hanlde horizontal scroll\n    this._shouldHandleY // Should handle vertical scroll\n    );\n  },\n\n  componentDidMount: function componentDidMount() {\n    this._mouseMoveTracker = new DOMMouseMoveTracker(this._onMouseMove, this._onMouseMoveEnd, document.documentElement);\n\n    if (this.props.position !== undefined && this.state.position !== this.props.position) {\n      this._didScroll();\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this._nextState = null;\n    this._mouseMoveTracker.releaseMouseMoves();\n    if (_lastScrolledScrollbar === this) {\n      _lastScrolledScrollbar = null;\n    }\n    delete this._mouseMoveTracker;\n  },\n\n  scrollBy: function scrollBy( /*number*/delta) {\n    this._onWheel(delta);\n  },\n\n  _shouldHandleX: function _shouldHandleX( /*number*/delta) /*boolean*/{\n    return this.props.orientation === 'horizontal' ? this._shouldHandleChange(delta) : false;\n  },\n\n  _shouldHandleY: function _shouldHandleY( /*number*/delta) /*boolean*/{\n    return this.props.orientation !== 'horizontal' ? this._shouldHandleChange(delta) : false;\n  },\n\n  _shouldHandleChange: function _shouldHandleChange( /*number*/delta) /*boolean*/{\n    var nextState = this._calculateState(this.state.position + delta, this.props.size, this.props.contentSize, this.props.orientation);\n    return nextState.position !== this.state.position;\n  },\n\n  _calculateState: function _calculateState(\n  /*number*/position,\n  /*number*/size,\n  /*number*/contentSize,\n  /*string*/orientation) /*object*/{\n    if (size < 1 || contentSize <= size) {\n      return UNSCROLLABLE_STATE;\n    }\n\n    var stateKey = position + '_' + size + '_' + contentSize + '_' + orientation;\n    if (this._stateKey === stateKey) {\n      return this._stateForKey;\n    }\n\n    // There are two types of positions here.\n    // 1) Phisical position: changed by mouse / keyboard\n    // 2) Logical position: changed by props.\n    // The logical position will be kept as as internal state and the `render()`\n    // function will translate it into physical position to render.\n\n    var isHorizontal = orientation === 'horizontal';\n    var scale = size / contentSize;\n    var faceSize = size * scale;\n\n    if (faceSize < FACE_SIZE_MIN) {\n      scale = (size - FACE_SIZE_MIN) / (contentSize - size);\n      faceSize = FACE_SIZE_MIN;\n    }\n\n    var scrollable = true;\n    var maxPosition = contentSize - size;\n\n    if (position < 0) {\n      position = 0;\n    } else if (position > maxPosition) {\n      position = maxPosition;\n    }\n\n    var isDragging = this._mouseMoveTracker ? this._mouseMoveTracker.isDragging() : false;\n\n    // This function should only return flat values that can be compared quiclky\n    // by `ReactComponentWithPureRenderMixin`.\n    var state = {\n      faceSize: faceSize,\n      isDragging: isDragging,\n      isHorizontal: isHorizontal,\n      position: position,\n      scale: scale,\n      scrollable: scrollable\n    };\n\n    // cache the state for later use.\n    this._stateKey = stateKey;\n    this._stateForKey = state;\n    return state;\n  },\n\n  _onWheelY: function _onWheelY( /*number*/deltaX, /*number*/deltaY) {\n    this._onWheel(deltaY);\n  },\n\n  _onWheelX: function _onWheelX( /*number*/deltaX, /*number*/deltaY) {\n    this._onWheel(deltaX);\n  },\n\n  _onWheel: function _onWheel( /*number*/delta) {\n    var props = this.props;\n\n    // The mouse may move faster then the animation frame does.\n    // Use `requestAnimationFrame` to avoid over-updating.\n    this._setNextState(this._calculateState(this.state.position + delta, props.size, props.contentSize, props.orientation));\n  },\n\n  _onMouseDown: function _onMouseDown( /*object*/event) {\n    var nextState;\n\n    if (event.target !== ReactDOM.findDOMNode(this.refs.face)) {\n      // Both `offsetX` and `layerX` are non-standard DOM property but they are\n      // magically available for browsers somehow.\n      var nativeEvent = event.nativeEvent;\n      var position = this.state.isHorizontal ? nativeEvent.offsetX || nativeEvent.layerX : nativeEvent.offsetY || nativeEvent.layerY;\n\n      // MouseDown on the scroll-track directly, move the center of the\n      // scroll-face to the mouse position.\n      var props = this.props;\n      position /= this.state.scale;\n      nextState = this._calculateState(position - this.state.faceSize * 0.5 / this.state.scale, props.size, props.contentSize, props.orientation);\n    } else {\n      nextState = {};\n    }\n\n    nextState.focused = true;\n    this._setNextState(nextState);\n\n    this._mouseMoveTracker.captureMouseMoves(event);\n    // Focus the node so it may receive keyboard event.\n    ReactDOM.findDOMNode(this).focus();\n  },\n\n  _onMouseMove: function _onMouseMove( /*number*/deltaX, /*number*/deltaY) {\n    var props = this.props;\n    var delta = this.state.isHorizontal ? deltaX : deltaY;\n    delta /= this.state.scale;\n\n    this._setNextState(this._calculateState(this.state.position + delta, props.size, props.contentSize, props.orientation));\n  },\n\n  _onMouseMoveEnd: function _onMouseMoveEnd() {\n    this._nextState = null;\n    this._mouseMoveTracker.releaseMouseMoves();\n    this.setState({ isDragging: false });\n  },\n\n  _onKeyDown: function _onKeyDown( /*object*/event) {\n    var keyCode = event.keyCode;\n\n    if (keyCode === Keys.TAB) {\n      // Let focus move off the scrollbar.\n      return;\n    }\n\n    var distance = KEYBOARD_SCROLL_AMOUNT;\n    var direction = 0;\n\n    if (this.state.isHorizontal) {\n      switch (keyCode) {\n        case Keys.HOME:\n          direction = -1;\n          distance = this.props.contentSize;\n          break;\n\n        case Keys.LEFT:\n          direction = -1;\n          break;\n\n        case Keys.RIGHT:\n          direction = 1;\n          break;\n\n        default:\n          return;\n      }\n    }\n\n    if (!this.state.isHorizontal) {\n      switch (keyCode) {\n        case Keys.SPACE:\n          if (event.shiftKey) {\n            direction = -1;\n          } else {\n            direction = 1;\n          }\n          break;\n\n        case Keys.HOME:\n          direction = -1;\n          distance = this.props.contentSize;\n          break;\n\n        case Keys.UP:\n          direction = -1;\n          break;\n\n        case Keys.DOWN:\n          direction = 1;\n          break;\n\n        case Keys.PAGE_UP:\n          direction = -1;\n          distance = this.props.size;\n          break;\n\n        case Keys.PAGE_DOWN:\n          direction = 1;\n          distance = this.props.size;\n          break;\n\n        default:\n          return;\n      }\n    }\n\n    event.preventDefault();\n\n    var props = this.props;\n    this._setNextState(this._calculateState(this.state.position + distance * direction, props.size, props.contentSize, props.orientation));\n  },\n\n  _onFocus: function _onFocus() {\n    this.setState({\n      focused: true\n    });\n  },\n\n  _onBlur: function _onBlur() {\n    this.setState({\n      focused: false\n    });\n  },\n\n  _blur: function _blur() {\n    if (this.isMounted()) {\n      try {\n        this._onBlur();\n        ReactDOM.findDOMNode(this).blur();\n      } catch (oops) {\n        // pass\n      }\n    }\n  },\n\n  _setNextState: function _setNextState( /*object*/nextState, /*?object*/props) {\n    props = props || this.props;\n    var controlledPosition = props.position;\n    var willScroll = this.state.position !== nextState.position;\n    if (controlledPosition === undefined) {\n      var callback = willScroll ? this._didScroll : undefined;\n      this.setState(nextState, callback);\n    } else if (controlledPosition === nextState.position) {\n      this.setState(nextState);\n    } else {\n      // Scrolling is controlled. Don't update the state and let the owner\n      // to update the scrollbar instead.\n      if (nextState.position !== undefined && nextState.position !== this.state.position) {\n        this.props.onScroll(nextState.position);\n      }\n      return;\n    }\n\n    if (willScroll && _lastScrolledScrollbar !== this) {\n      _lastScrolledScrollbar && _lastScrolledScrollbar._blur();\n      _lastScrolledScrollbar = this;\n    }\n  },\n\n  _didScroll: function _didScroll() {\n    this.props.onScroll(this.state.position);\n  }\n});\n\nScrollbar.KEYBOARD_SCROLL_AMOUNT = KEYBOARD_SCROLL_AMOUNT;\nScrollbar.SIZE = parseInt(cssVar('scrollbar-size'), 10);\n\nmodule.exports = Scrollbar;"]},"metadata":{},"sourceType":"script"}