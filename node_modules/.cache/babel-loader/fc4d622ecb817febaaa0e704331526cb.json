{"ast":null,"code":"/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTable.react\n */\n\n/**\n * TRANSITION SHIM\n * This acts to provide an intermediate mapping from the old API to the new API\n *\n * Remove this entire file and replace the two lines in FixedDataTableRoot\n * when ready to continue to the new API.\n */\n'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar React = require('./React');\n\nvar createReactClass = require('create-react-class');\n\nvar ReactChildren = React.Children;\n\nvar PropTypes = require('prop-types'); // New Table API\n\n\nvar Table = require('./FixedDataTableNew.react');\n\nvar Column = require('./FixedDataTableColumnNew.react');\n\nvar ColumnGroup = require('./FixedDataTableColumnGroupNew.react'); // Transition Cell\n\n\nvar TransitionCell = require('./FixedDataTableCellTransition.react');\n\nvar NEXT_VERSION = '0.7.0';\nvar DOCUMENTATION_URL = 'https://fburl.com/FixedDataTable-v0.6';\nvar EMPTY_OBJECT = {};\n/**\n * Notify in console that some prop has been deprecated.\n */\n\nvar notified = {};\n\nfunction notifyDeprecated(prop, reason) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!notified[prop]) {\n      console.warn('`' + prop + '` will be DEPRECATED in version ' + NEXT_VERSION + ' of FixedDataTable and beyond. \\n' + reason + '\\n' + 'Read the docs at: ' + DOCUMENTATION_URL);\n      notified[prop] = true;\n    }\n  }\n}\n/**\n * Data grid component with fixed or scrollable header and columns.\n *\n * This is currently in a transition mode, as the new API is used.\n * DEPRECATED endpoints work, but will not be supported in later versions.\n *\n * The layout of the data table is as follows:\n *\n * ```\n * +---------------------------------------------------+\n * | Fixed Column Group    | Scrollable Column Group   |\n * | Header                | Header                    |\n * |                       |                           |\n * +---------------------------------------------------+\n * |                       |                           |\n * | Fixed Header Columns  | Scrollable Header Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Body Columns    | Scrollable Body Columns   |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Footer Columns  | Scrollable Footer Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * ```\n *\n * - Fixed Column Group Header: These are the headers for a group\n *   of columns if included in the table that do not scroll\n *   vertically or horizontally.\n *\n * - Scrollable Column Group Header: The header for a group of columns\n *   that do not move while scrolling vertically, but move horizontally\n *   with the horizontal scrolling.\n *\n * - Fixed Header Columns: The header columns that do not move while scrolling\n *   vertically or horizontally.\n *\n * - Scrollable Header Columns: The header columns that do not move\n *   while scrolling vertically, but move horizontally with the horizontal\n *   scrolling.\n *\n * - Fixed Body Columns: The body columns that do not move while scrolling\n *   horizontally, but move vertically with the vertical scrolling.\n *\n * - Scrollable Body Columns: The body columns that move while scrolling\n *   vertically or horizontally.\n */\n\n\nvar TransitionTable = createReactClass({\n  propTypes: {\n    /**\n     * Pixel width of table. If all columns do not fit,\n     * a horizontal scrollbar will appear.\n     */\n    width: PropTypes.number.isRequired,\n\n    /**\n     * Pixel height of table. If all rows do not fit,\n     * a vertical scrollbar will appear.\n     *\n     * Either `height` or `maxHeight` must be specified.\n     */\n    height: PropTypes.number,\n\n    /**\n     * Maximum pixel height of table. If all rows do not fit,\n     * a vertical scrollbar will appear.\n     *\n     * Either `height` or `maxHeight` must be specified.\n     */\n    maxHeight: PropTypes.number,\n\n    /**\n     * Pixel height of table's owner, this is used in a managed scrolling\n     * situation when you want to slide the table up from below the fold\n     * without having to constantly update the height on every scroll tick.\n     * Instead, vary this property on scroll. By using `ownerHeight`, we\n     * over-render the table while making sure the footer and horizontal\n     * scrollbar of the table are visible when the current space for the table\n     * in view is smaller than the final, over-flowing height of table. It\n     * allows us to avoid resizing and reflowing table when it is moving in the\n     * view.\n     *\n     * This is used if `ownerHeight < height` (or `maxHeight`).\n     */\n    ownerHeight: PropTypes.number,\n    overflowX: PropTypes.oneOf(['hidden', 'auto']),\n    overflowY: PropTypes.oneOf(['hidden', 'auto']),\n\n    /**\n     * Number of rows in the table.\n     */\n    rowsCount: PropTypes.number.isRequired,\n\n    /**\n     * Pixel height of rows unless `rowHeightGetter` is specified and returns\n     * different value.\n     */\n    rowHeight: PropTypes.number.isRequired,\n\n    /**\n     * If specified, `rowHeightGetter(index)` is called for each row and the\n     * returned value overrides `rowHeight` for particular row.\n     */\n    rowHeightGetter: PropTypes.func,\n\n    /**\n     * DEPRECATED\n     *\n     * To get rows to display in table, `rowGetter(index)`\n     * is called. `rowGetter` should be smart enough to handle async\n     * fetching of data and return temporary objects\n     * while data is being fetched.\n     */\n    rowGetter: PropTypes.func,\n\n    /**\n     * To get any additional CSS classes that should be added to a row,\n     * `rowClassNameGetter(index)` is called.\n     */\n    rowClassNameGetter: PropTypes.func,\n\n    /**\n     * Pixel height of the column group header.\n     */\n    groupHeaderHeight: PropTypes.number,\n\n    /**\n     * Pixel height of header.\n     */\n    headerHeight: PropTypes.number.isRequired,\n\n    /**\n     * DEPRECATED\n     *\n     * Function that is called to get the data for the header row.\n     * If the function returns null, the header will be set to the\n     * Column's label property.\n     */\n    headerDataGetter: PropTypes.func,\n\n    /**\n     * Pixel height of footer.\n     */\n    footerHeight: PropTypes.number,\n\n    /**\n     * DEPRECATED - use footerDataGetter instead.\n     * Data that will be passed to footer cell renderers.\n     */\n    footerData: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n    /**\n     * DEPRECATED\n     *\n     * Function that is called to get the data for the footer row.\n     */\n    footerDataGetter: PropTypes.func,\n\n    /**\n     * Value of horizontal scroll.\n     */\n    scrollLeft: PropTypes.number,\n\n    /**\n     * Index of column to scroll to.\n     */\n    scrollToColumn: PropTypes.number,\n\n    /**\n     * Value of vertical scroll.\n     */\n    scrollTop: PropTypes.number,\n\n    /**\n     * Index of row to scroll to.\n     */\n    scrollToRow: PropTypes.number,\n\n    /**\n     * Callback that is called when scrolling starts with current horizontal\n     * and vertical scroll values.\n     */\n    onScrollStart: PropTypes.func,\n\n    /**\n     * Callback that is called when scrolling ends or stops with new horizontal\n     * and vertical scroll values.\n     */\n    onScrollEnd: PropTypes.func,\n\n    /**\n     * Callback that is called when `rowHeightGetter` returns a different height\n     * for a row than the `rowHeight` prop. This is necessary because initially\n     * table estimates heights of some parts of the content.\n     */\n    onContentHeightChange: PropTypes.func,\n\n    /**\n     * Callback that is called when a row is clicked.\n     */\n    onRowClick: PropTypes.func,\n\n    /**\n     * Callback that is called when a row is double clicked.\n     */\n    onRowDoubleClick: PropTypes.func,\n\n    /**\n     * Callback that is called when a mouse-down event happens on a row.\n     */\n    onRowMouseDown: PropTypes.func,\n\n    /**\n     * Callback that is called when a mouse-enter event happens on a row.\n     */\n    onRowMouseEnter: PropTypes.func,\n\n    /**\n     * Callback that is called when a mouse-leave event happens on a row.\n     */\n    onRowMouseLeave: PropTypes.func,\n\n    /**\n     * Callback that is called when resizer has been released\n     * and column needs to be updated.\n     *\n     * Required if the isResizable property is true on any column.\n     *\n     * ```\n     * function(\n     *   newColumnWidth: number,\n     *   dataKey: string,\n     * )\n     * ```\n     */\n    onColumnResizeEndCallback: PropTypes.func,\n\n    /**\n     * Whether a column is currently being resized.\n     */\n    isColumnResizing: PropTypes.bool\n  },\n  getInitialState: function getInitialState() {\n    // Throw warnings on deprecated props.\n    var state = {};\n    state.needsMigration = this._checkDeprecations();\n    return state;\n  },\n  _checkDeprecations: function _checkDeprecations() {\n    var needsMigration = false;\n\n    if (this.props.rowGetter) {\n      notifyDeprecated('rowGetter', 'Please use the cell API in Column to fetch data for your cells.'); // ROWGETTER??? You need to migrate.\n\n      needsMigration = true;\n    }\n\n    if (this.props.headerDataGetter) {\n      notifyDeprecated('headerDataGetter', 'Please use the header API in Column to ' + 'fetch data for your header cells.');\n    }\n\n    if (this.props.footerData) {\n      notifyDeprecated('footerData', 'Please use the footer API in Column to ' + 'fetch data for your footer cells.');\n    }\n\n    if (this.props.footerDataGetter) {\n      notifyDeprecated('footerDataGetter', 'Please use the footer API in Column to ' + 'fetch data for your footer cells.');\n    }\n\n    ReactChildren.forEach(this.props.children, function (child) {\n      if (!child || !child.props) {\n        return;\n      }\n\n      var props = child.props;\n\n      if (props.label) {\n        notifyDeprecated('label', 'Please use `header` instead.');\n      }\n\n      if (props.dataKey) {\n        notifyDeprecated('dataKey', 'Please use the `cell` API to pass in a dataKey');\n      }\n\n      if (props.cellRenderer) {\n        notifyDeprecated('cellRenderer', 'Please use the `cell` API to pass in a React Element instead.');\n      }\n\n      if (props.headerRenderer) {\n        notifyDeprecated('headerRenderer', 'Please use the `header` API to pass in a React Element instead.');\n      }\n\n      if (props.columnData) {\n        notifyDeprecated('columnData', 'Please pass data in through props to your header, cell or footer.');\n      }\n\n      if (props.groupHeaderRenderer) {\n        notifyDeprecated('groupHeaderRenderer', 'Please use the `header` API in ColumnGroup to ' + 'pass in a React Element instead of a function that creates one.');\n      }\n\n      if (props.groupHeaderData) {\n        notifyDeprecated('groupHeaderData', 'Please pass in any data through props to your header.');\n      }\n    });\n    return needsMigration;\n  },\n  // Wrapper for onRow callbacks, since we don't have rowData at that level.\n  _onRowAction: function _onRowAction(props, callback) {\n    if (!callback) {\n      return undefined;\n    }\n\n    return function (e, rowIndex) {\n      callback(e, rowIndex, props.rowGetter && props.rowGetter(rowIndex) || EMPTY_OBJECT);\n    };\n  },\n  _transformColumn: function _transformColumn(column, tableProps, key) {\n    var props = column.props;\n\n    if (column.type.__TableColumn__) {\n      // Constuct the cell to be used using the rowGetter\n      return React.createElement(Column, _extends({\n        key: 'column_' + key\n      }, props, {\n        header: React.createElement(TransitionCell, {\n          isHeaderCell: true,\n          label: props.label,\n          width: props.width,\n          dataKey: props.dataKey,\n          className: props.headerClassName,\n          columnData: props.columnData || EMPTY_OBJECT,\n          cellRenderer: props.headerRenderer,\n          headerDataGetter: tableProps.headerDataGetter\n        }),\n        columnKey: props.dataKey,\n        cell: React.createElement(TransitionCell, {\n          dataKey: props.dataKey,\n          className: props.cellClassName,\n          rowGetter: tableProps.rowGetter,\n          width: props.width,\n          columnData: props.columnData || EMPTY_OBJECT,\n          cellDataGetter: props.cellDataGetter,\n          cellRenderer: props.cellRenderer\n        }),\n        footer: React.createElement(TransitionCell, {\n          isFooterCell: true,\n          className: props.footerClassName,\n          dataKey: props.dataKey,\n          cellRenderer: props.footerRenderer,\n          footerDataGetter: tableProps.footerDataGetter,\n          footerData: tableProps.footerData || EMPTY_OBJECT\n        })\n      }));\n    }\n  },\n  _transformColumnGroup: function _transformColumnGroup(group, tableProps, key, labels) {\n    var _this = this;\n\n    var props = group.props;\n    var j = 0;\n    var columns = ReactChildren.map(props.children, function (child) {\n      j++;\n      return _this._transformColumn(child, tableProps, key + '_' + j);\n    });\n    return React.createElement(ColumnGroup, _extends({}, props, {\n      key: 'group_' + key,\n      header: React.createElement(TransitionCell, {\n        isHeaderCell: true,\n        label: group.props.label,\n        dataKey: key,\n        groupHeaderRenderer: props.groupHeaderRenderer,\n        groupHeaderLabels: labels,\n        groupHeaderData: props.columnGroupData || EMPTY_OBJECT\n      })\n    }), columns);\n  },\n  _convertedColumns: function _convertedColumns(needsMigration) {\n    var _this2 = this; // If we don't need to migrate, map directly to the new API.\n\n\n    if (!needsMigration) {\n      return ReactChildren.map(this.props.children, function (child) {\n        if (!child) {\n          return null;\n        }\n\n        if (child.type.__TableColumn__) {\n          return React.createElement(Column, child.props);\n        }\n\n        if (child.type.__TableColumnGroup__) {\n          return React.createElement(ColumnGroup, child.props);\n        }\n      });\n    }\n\n    var tableProps = this.props; // Otherwise, if a migration is needed, we need to transform each Column\n    // or ColumnGroup.\n\n    var i = 0;\n    return ReactChildren.map(this.props.children, function (child) {\n      if (!child) {\n        return null;\n      }\n\n      if (child.type.__TableColumn__) {\n        child = _this2._transformColumn(child, tableProps, i);\n      }\n\n      if (child.type.__TableColumnGroup__) {\n        // Since we apparently give an array of labels to groupHeaderRenderer\n        var labels = [];\n        ReactChildren.forEach(_this2.props.children, function (child) {\n          labels.push(child.props.label);\n        });\n        child = _this2._transformColumnGroup(child, tableProps, i, labels);\n      }\n\n      i++;\n      return child;\n    });\n  },\n  render: function render() {\n    var props = this.props;\n    return React.createElement(Table, _extends({}, props, {\n      onRowMouseDown: this._onRowAction(props, props.onRowMouseDown),\n      onRowClick: this._onRowAction(props, props.onRowClick),\n      onRowDoubleClick: this._onRowAction(props, props.onRowDoubleClick),\n      onRowMouseEnter: this._onRowAction(props, props.onRowMouseEnter),\n      onRowMouseLeave: this._onRowAction(props, props.onRowMouseLeave)\n    }), this._convertedColumns(this.state.needsMigration));\n  }\n});\nmodule.exports = TransitionTable;","map":{"version":3,"sources":["C:/Versa/pagination/node_modules/fixed-data-table/internal/FixedDataTable.react.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","require","createReactClass","ReactChildren","Children","PropTypes","Table","Column","ColumnGroup","TransitionCell","NEXT_VERSION","DOCUMENTATION_URL","EMPTY_OBJECT","notified","notifyDeprecated","prop","reason","process","env","NODE_ENV","console","warn","TransitionTable","propTypes","width","number","isRequired","height","maxHeight","ownerHeight","overflowX","oneOf","overflowY","rowsCount","rowHeight","rowHeightGetter","func","rowGetter","rowClassNameGetter","groupHeaderHeight","headerHeight","headerDataGetter","footerHeight","footerData","oneOfType","object","array","footerDataGetter","scrollLeft","scrollToColumn","scrollTop","scrollToRow","onScrollStart","onScrollEnd","onContentHeightChange","onRowClick","onRowDoubleClick","onRowMouseDown","onRowMouseEnter","onRowMouseLeave","onColumnResizeEndCallback","isColumnResizing","bool","getInitialState","state","needsMigration","_checkDeprecations","props","forEach","children","child","label","dataKey","cellRenderer","headerRenderer","columnData","groupHeaderRenderer","groupHeaderData","_onRowAction","callback","undefined","e","rowIndex","_transformColumn","column","tableProps","type","__TableColumn__","createElement","header","isHeaderCell","className","headerClassName","columnKey","cell","cellClassName","cellDataGetter","footer","isFooterCell","footerClassName","footerRenderer","_transformColumnGroup","group","labels","_this","j","columns","map","groupHeaderLabels","columnGroupData","_convertedColumns","_this2","__TableColumnGroup__","push","render","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTable.react\n */\n\n/**\n * TRANSITION SHIM\n * This acts to provide an intermediate mapping from the old API to the new API\n *\n * Remove this entire file and replace the two lines in FixedDataTableRoot\n * when ready to continue to the new API.\n */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar React = require('./React');\nvar createReactClass = require('create-react-class');\n\nvar ReactChildren = React.Children;\n\nvar PropTypes = require('prop-types');\n\n// New Table API\nvar Table = require('./FixedDataTableNew.react');\nvar Column = require('./FixedDataTableColumnNew.react');\nvar ColumnGroup = require('./FixedDataTableColumnGroupNew.react');\n\n// Transition Cell\nvar TransitionCell = require('./FixedDataTableCellTransition.react');\n\nvar NEXT_VERSION = '0.7.0';\nvar DOCUMENTATION_URL = 'https://fburl.com/FixedDataTable-v0.6';\n\nvar EMPTY_OBJECT = {};\n\n/**\n * Notify in console that some prop has been deprecated.\n */\nvar notified = {};\nfunction notifyDeprecated(prop, reason) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!notified[prop]) {\n      console.warn('`' + prop + '` will be DEPRECATED in version ' + NEXT_VERSION + ' of FixedDataTable and beyond. \\n' + reason + '\\n' + 'Read the docs at: ' + DOCUMENTATION_URL);\n      notified[prop] = true;\n    }\n  }\n}\n\n/**\n * Data grid component with fixed or scrollable header and columns.\n *\n * This is currently in a transition mode, as the new API is used.\n * DEPRECATED endpoints work, but will not be supported in later versions.\n *\n * The layout of the data table is as follows:\n *\n * ```\n * +---------------------------------------------------+\n * | Fixed Column Group    | Scrollable Column Group   |\n * | Header                | Header                    |\n * |                       |                           |\n * +---------------------------------------------------+\n * |                       |                           |\n * | Fixed Header Columns  | Scrollable Header Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Body Columns    | Scrollable Body Columns   |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Footer Columns  | Scrollable Footer Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * ```\n *\n * - Fixed Column Group Header: These are the headers for a group\n *   of columns if included in the table that do not scroll\n *   vertically or horizontally.\n *\n * - Scrollable Column Group Header: The header for a group of columns\n *   that do not move while scrolling vertically, but move horizontally\n *   with the horizontal scrolling.\n *\n * - Fixed Header Columns: The header columns that do not move while scrolling\n *   vertically or horizontally.\n *\n * - Scrollable Header Columns: The header columns that do not move\n *   while scrolling vertically, but move horizontally with the horizontal\n *   scrolling.\n *\n * - Fixed Body Columns: The body columns that do not move while scrolling\n *   horizontally, but move vertically with the vertical scrolling.\n *\n * - Scrollable Body Columns: The body columns that move while scrolling\n *   vertically or horizontally.\n */\nvar TransitionTable = createReactClass({\n  propTypes: {\n    /**\n     * Pixel width of table. If all columns do not fit,\n     * a horizontal scrollbar will appear.\n     */\n    width: PropTypes.number.isRequired,\n\n    /**\n     * Pixel height of table. If all rows do not fit,\n     * a vertical scrollbar will appear.\n     *\n     * Either `height` or `maxHeight` must be specified.\n     */\n    height: PropTypes.number,\n\n    /**\n     * Maximum pixel height of table. If all rows do not fit,\n     * a vertical scrollbar will appear.\n     *\n     * Either `height` or `maxHeight` must be specified.\n     */\n    maxHeight: PropTypes.number,\n\n    /**\n     * Pixel height of table's owner, this is used in a managed scrolling\n     * situation when you want to slide the table up from below the fold\n     * without having to constantly update the height on every scroll tick.\n     * Instead, vary this property on scroll. By using `ownerHeight`, we\n     * over-render the table while making sure the footer and horizontal\n     * scrollbar of the table are visible when the current space for the table\n     * in view is smaller than the final, over-flowing height of table. It\n     * allows us to avoid resizing and reflowing table when it is moving in the\n     * view.\n     *\n     * This is used if `ownerHeight < height` (or `maxHeight`).\n     */\n    ownerHeight: PropTypes.number,\n\n    overflowX: PropTypes.oneOf(['hidden', 'auto']),\n    overflowY: PropTypes.oneOf(['hidden', 'auto']),\n\n    /**\n     * Number of rows in the table.\n     */\n    rowsCount: PropTypes.number.isRequired,\n\n    /**\n     * Pixel height of rows unless `rowHeightGetter` is specified and returns\n     * different value.\n     */\n    rowHeight: PropTypes.number.isRequired,\n\n    /**\n     * If specified, `rowHeightGetter(index)` is called for each row and the\n     * returned value overrides `rowHeight` for particular row.\n     */\n    rowHeightGetter: PropTypes.func,\n\n    /**\n     * DEPRECATED\n     *\n     * To get rows to display in table, `rowGetter(index)`\n     * is called. `rowGetter` should be smart enough to handle async\n     * fetching of data and return temporary objects\n     * while data is being fetched.\n     */\n    rowGetter: PropTypes.func,\n\n    /**\n     * To get any additional CSS classes that should be added to a row,\n     * `rowClassNameGetter(index)` is called.\n     */\n    rowClassNameGetter: PropTypes.func,\n\n    /**\n     * Pixel height of the column group header.\n     */\n    groupHeaderHeight: PropTypes.number,\n\n    /**\n     * Pixel height of header.\n     */\n    headerHeight: PropTypes.number.isRequired,\n\n    /**\n     * DEPRECATED\n     *\n     * Function that is called to get the data for the header row.\n     * If the function returns null, the header will be set to the\n     * Column's label property.\n     */\n    headerDataGetter: PropTypes.func,\n\n    /**\n     * Pixel height of footer.\n     */\n    footerHeight: PropTypes.number,\n\n    /**\n     * DEPRECATED - use footerDataGetter instead.\n     * Data that will be passed to footer cell renderers.\n     */\n    footerData: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n    /**\n     * DEPRECATED\n     *\n     * Function that is called to get the data for the footer row.\n     */\n    footerDataGetter: PropTypes.func,\n\n    /**\n     * Value of horizontal scroll.\n     */\n    scrollLeft: PropTypes.number,\n\n    /**\n     * Index of column to scroll to.\n     */\n    scrollToColumn: PropTypes.number,\n\n    /**\n     * Value of vertical scroll.\n     */\n    scrollTop: PropTypes.number,\n\n    /**\n     * Index of row to scroll to.\n     */\n    scrollToRow: PropTypes.number,\n\n    /**\n     * Callback that is called when scrolling starts with current horizontal\n     * and vertical scroll values.\n     */\n    onScrollStart: PropTypes.func,\n\n    /**\n     * Callback that is called when scrolling ends or stops with new horizontal\n     * and vertical scroll values.\n     */\n    onScrollEnd: PropTypes.func,\n\n    /**\n     * Callback that is called when `rowHeightGetter` returns a different height\n     * for a row than the `rowHeight` prop. This is necessary because initially\n     * table estimates heights of some parts of the content.\n     */\n    onContentHeightChange: PropTypes.func,\n\n    /**\n     * Callback that is called when a row is clicked.\n     */\n    onRowClick: PropTypes.func,\n\n    /**\n     * Callback that is called when a row is double clicked.\n     */\n    onRowDoubleClick: PropTypes.func,\n\n    /**\n     * Callback that is called when a mouse-down event happens on a row.\n     */\n    onRowMouseDown: PropTypes.func,\n\n    /**\n     * Callback that is called when a mouse-enter event happens on a row.\n     */\n    onRowMouseEnter: PropTypes.func,\n\n    /**\n     * Callback that is called when a mouse-leave event happens on a row.\n     */\n    onRowMouseLeave: PropTypes.func,\n\n    /**\n     * Callback that is called when resizer has been released\n     * and column needs to be updated.\n     *\n     * Required if the isResizable property is true on any column.\n     *\n     * ```\n     * function(\n     *   newColumnWidth: number,\n     *   dataKey: string,\n     * )\n     * ```\n     */\n    onColumnResizeEndCallback: PropTypes.func,\n\n    /**\n     * Whether a column is currently being resized.\n     */\n    isColumnResizing: PropTypes.bool\n  },\n\n  getInitialState: function getInitialState() {\n    // Throw warnings on deprecated props.\n    var state = {};\n    state.needsMigration = this._checkDeprecations();\n\n    return state;\n  },\n\n  _checkDeprecations: function _checkDeprecations() {\n    var needsMigration = false;\n\n    if (this.props.rowGetter) {\n      notifyDeprecated('rowGetter', 'Please use the cell API in Column to fetch data for your cells.');\n\n      // ROWGETTER??? You need to migrate.\n      needsMigration = true;\n    }\n\n    if (this.props.headerDataGetter) {\n      notifyDeprecated('headerDataGetter', 'Please use the header API in Column to ' + 'fetch data for your header cells.');\n    }\n\n    if (this.props.footerData) {\n      notifyDeprecated('footerData', 'Please use the footer API in Column to ' + 'fetch data for your footer cells.');\n    }\n\n    if (this.props.footerDataGetter) {\n      notifyDeprecated('footerDataGetter', 'Please use the footer API in Column to ' + 'fetch data for your footer cells.');\n    }\n\n    ReactChildren.forEach(this.props.children, function (child) {\n      if (!child || !child.props) {\n        return;\n      }\n\n      var props = child.props;\n\n      if (props.label) {\n        notifyDeprecated('label', 'Please use `header` instead.');\n      }\n\n      if (props.dataKey) {\n        notifyDeprecated('dataKey', 'Please use the `cell` API to pass in a dataKey');\n      }\n\n      if (props.cellRenderer) {\n        notifyDeprecated('cellRenderer', 'Please use the `cell` API to pass in a React Element instead.');\n      }\n\n      if (props.headerRenderer) {\n        notifyDeprecated('headerRenderer', 'Please use the `header` API to pass in a React Element instead.');\n      }\n\n      if (props.columnData) {\n        notifyDeprecated('columnData', 'Please pass data in through props to your header, cell or footer.');\n      }\n\n      if (props.groupHeaderRenderer) {\n        notifyDeprecated('groupHeaderRenderer', 'Please use the `header` API in ColumnGroup to ' + 'pass in a React Element instead of a function that creates one.');\n      }\n\n      if (props.groupHeaderData) {\n        notifyDeprecated('groupHeaderData', 'Please pass in any data through props to your header.');\n      }\n    });\n\n    return needsMigration;\n  },\n\n  // Wrapper for onRow callbacks, since we don't have rowData at that level.\n  _onRowAction: function _onRowAction(props, callback) {\n    if (!callback) {\n      return undefined;\n    }\n\n    return function (e, rowIndex) {\n      callback(e, rowIndex, props.rowGetter && props.rowGetter(rowIndex) || EMPTY_OBJECT);\n    };\n  },\n\n  _transformColumn: function _transformColumn(column, tableProps, key) {\n\n    var props = column.props;\n\n    if (column.type.__TableColumn__) {\n      // Constuct the cell to be used using the rowGetter\n      return React.createElement(Column, _extends({\n        key: 'column_' + key\n      }, props, {\n        header: React.createElement(TransitionCell, {\n          isHeaderCell: true,\n          label: props.label,\n          width: props.width,\n          dataKey: props.dataKey,\n          className: props.headerClassName,\n          columnData: props.columnData || EMPTY_OBJECT,\n          cellRenderer: props.headerRenderer,\n          headerDataGetter: tableProps.headerDataGetter\n        }),\n        columnKey: props.dataKey,\n        cell: React.createElement(TransitionCell, {\n          dataKey: props.dataKey,\n          className: props.cellClassName,\n          rowGetter: tableProps.rowGetter,\n          width: props.width,\n          columnData: props.columnData || EMPTY_OBJECT,\n          cellDataGetter: props.cellDataGetter,\n          cellRenderer: props.cellRenderer\n        }),\n        footer: React.createElement(TransitionCell, {\n          isFooterCell: true,\n          className: props.footerClassName,\n          dataKey: props.dataKey,\n          cellRenderer: props.footerRenderer,\n          footerDataGetter: tableProps.footerDataGetter,\n          footerData: tableProps.footerData || EMPTY_OBJECT\n        })\n      }));\n    }\n  },\n\n  _transformColumnGroup: function _transformColumnGroup(group, tableProps, key, labels) {\n    var _this = this;\n\n    var props = group.props;\n\n    var j = 0;\n    var columns = ReactChildren.map(props.children, function (child) {\n      j++;\n      return _this._transformColumn(child, tableProps, key + '_' + j);\n    });\n\n    return React.createElement(\n      ColumnGroup,\n      _extends({}, props, {\n        key: 'group_' + key,\n        header: React.createElement(TransitionCell, {\n          isHeaderCell: true,\n          label: group.props.label,\n          dataKey: key,\n          groupHeaderRenderer: props.groupHeaderRenderer,\n          groupHeaderLabels: labels,\n          groupHeaderData: props.columnGroupData || EMPTY_OBJECT\n        }) }),\n      columns\n    );\n  },\n\n  _convertedColumns: function _convertedColumns(needsMigration) {\n    var _this2 = this;\n\n    // If we don't need to migrate, map directly to the new API.\n    if (!needsMigration) {\n      return ReactChildren.map(this.props.children, function (child) {\n\n        if (!child) {\n          return null;\n        }\n\n        if (child.type.__TableColumn__) {\n          return React.createElement(Column, child.props);\n        }\n\n        if (child.type.__TableColumnGroup__) {\n          return React.createElement(ColumnGroup, child.props);\n        }\n      });\n    }\n\n    var tableProps = this.props;\n\n    // Otherwise, if a migration is needed, we need to transform each Column\n    // or ColumnGroup.\n    var i = 0;\n    return ReactChildren.map(this.props.children, function (child) {\n\n      if (!child) {\n        return null;\n      }\n\n      if (child.type.__TableColumn__) {\n        child = _this2._transformColumn(child, tableProps, i);\n      }\n\n      if (child.type.__TableColumnGroup__) {\n        // Since we apparently give an array of labels to groupHeaderRenderer\n        var labels = [];\n        ReactChildren.forEach(_this2.props.children, function (child) {\n          labels.push(child.props.label);\n        });\n\n        child = _this2._transformColumnGroup(child, tableProps, i, labels);\n      }\n\n      i++;\n      return child;\n    });\n  },\n\n  render: function render() {\n    var props = this.props;\n    return React.createElement(\n      Table,\n      _extends({}, props, {\n        onRowMouseDown: this._onRowAction(props, props.onRowMouseDown),\n        onRowClick: this._onRowAction(props, props.onRowClick),\n        onRowDoubleClick: this._onRowAction(props, props.onRowDoubleClick),\n        onRowMouseEnter: this._onRowAction(props, props.onRowMouseEnter),\n        onRowMouseLeave: this._onRowAction(props, props.onRowMouseLeave)\n      }),\n      this._convertedColumns(this.state.needsMigration)\n    );\n  }\n});\n\nmodule.exports = TransitionTable;"]},"metadata":{},"sourceType":"script"}