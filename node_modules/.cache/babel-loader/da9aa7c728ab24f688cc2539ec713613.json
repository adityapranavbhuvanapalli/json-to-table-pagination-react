{"ast":null,"code":"/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This class listens to events on the document and then updates a react\n * component through callbacks.\n * Please note that captureMouseMove must be called in\n * order to initialize listeners on mousemove and mouseup.\n * releaseMouseMove must be called to remove them. It is important to\n * call releaseMouseMoves since mousemove is expensive to listen to.\n *\n * @providesModule DOMMouseMoveTracker\n * @typechecks\n */\n'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nvar EventListener = require('./EventListener');\n\nvar cancelAnimationFramePolyfill = require('./cancelAnimationFramePolyfill');\n\nvar requestAnimationFramePolyfill = require('./requestAnimationFramePolyfill');\n\nvar DOMMouseMoveTracker = function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(\n  /*function*/\n  onMove,\n  /*function*/\n  onMoveEnd,\n  /*DOMElement*/\n  domNode) {\n    _classCallCheck(this, DOMMouseMoveTracker);\n\n    this._isDragging = false;\n    this._animationFrameID = null;\n    this._domNode = domNode;\n    this._onMove = onMove;\n    this._onMoveEnd = onMoveEnd;\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this._onMouseUp = this._onMouseUp.bind(this);\n    this._didMouseMove = this._didMouseMove.bind(this);\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n\n  _createClass(DOMMouseMoveTracker, [{\n    key: 'captureMouseMoves',\n    value: function captureMouseMoves(\n    /*object*/\n    event) {\n      if (!this._eventMoveToken && !this._eventUpToken) {\n        this._eventMoveToken = EventListener.listen(this._domNode, 'mousemove', this._onMouseMove);\n        this._eventUpToken = EventListener.listen(this._domNode, 'mouseup', this._onMouseUp);\n      }\n\n      if (!this._isDragging) {\n        this._deltaX = 0;\n        this._deltaY = 0;\n        this._isDragging = true;\n        this._x = event.clientX;\n        this._y = event.clientY;\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * These releases all of the listeners on document.body.\n     */\n\n  }, {\n    key: 'releaseMouseMoves',\n    value: function releaseMouseMoves() {\n      if (this._eventMoveToken && this._eventUpToken) {\n        this._eventMoveToken.remove();\n\n        this._eventMoveToken = null;\n\n        this._eventUpToken.remove();\n\n        this._eventUpToken = null;\n      }\n\n      if (this._animationFrameID !== null) {\n        cancelAnimationFramePolyfill(this._animationFrameID);\n        this._animationFrameID = null;\n      }\n\n      if (this._isDragging) {\n        this._isDragging = false;\n        this._x = null;\n        this._y = null;\n      }\n    }\n    /**\n     * Returns whether or not if the mouse movement is being tracked.\n     */\n\n  }, {\n    key: 'isDragging',\n    value: function isDragging()\n    /*boolean*/\n    {\n      return this._isDragging;\n    }\n    /**\n     * Calls onMove passed into constructor and updates internal state.\n     */\n\n  }, {\n    key: '_onMouseMove',\n    value: function _onMouseMove(\n    /*object*/\n    event) {\n      var x = event.clientX;\n      var y = event.clientY;\n      this._deltaX += x - this._x;\n      this._deltaY += y - this._y;\n\n      if (this._animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        this._animationFrameID = requestAnimationFramePolyfill(this._didMouseMove);\n      }\n\n      this._x = x;\n      this._y = y;\n      event.preventDefault();\n    }\n  }, {\n    key: '_didMouseMove',\n    value: function _didMouseMove() {\n      this._animationFrameID = null;\n\n      this._onMove(this._deltaX, this._deltaY);\n\n      this._deltaX = 0;\n      this._deltaY = 0;\n    }\n    /**\n     * Calls onMoveEnd passed into constructor and updates internal state.\n     */\n\n  }, {\n    key: '_onMouseUp',\n    value: function _onMouseUp() {\n      if (this._animationFrameID) {\n        this._didMouseMove();\n      }\n\n      this._onMoveEnd();\n    }\n  }]);\n\n  return DOMMouseMoveTracker;\n}();\n\nmodule.exports = DOMMouseMoveTracker;","map":{"version":3,"sources":["C:/Versa/pagination/node_modules/fixed-data-table/internal/DOMMouseMoveTracker.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","EventListener","require","cancelAnimationFramePolyfill","requestAnimationFramePolyfill","DOMMouseMoveTracker","onMove","onMoveEnd","domNode","_isDragging","_animationFrameID","_domNode","_onMove","_onMoveEnd","_onMouseMove","bind","_onMouseUp","_didMouseMove","value","captureMouseMoves","event","_eventMoveToken","_eventUpToken","listen","_deltaX","_deltaY","_x","clientX","_y","clientY","preventDefault","releaseMouseMoves","remove","isDragging","x","y","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This class listens to events on the document and then updates a react\n * component through callbacks.\n * Please note that captureMouseMove must be called in\n * order to initialize listeners on mousemove and mouseup.\n * releaseMouseMove must be called to remove them. It is important to\n * call releaseMouseMoves since mousemove is expensive to listen to.\n *\n * @providesModule DOMMouseMoveTracker\n * @typechecks\n */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventListener = require('./EventListener');\n\nvar cancelAnimationFramePolyfill = require('./cancelAnimationFramePolyfill');\nvar requestAnimationFramePolyfill = require('./requestAnimationFramePolyfill');\n\nvar DOMMouseMoveTracker = (function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n\n  function DOMMouseMoveTracker(\n  /*function*/onMove,\n  /*function*/onMoveEnd,\n  /*DOMElement*/domNode) {\n    _classCallCheck(this, DOMMouseMoveTracker);\n\n    this._isDragging = false;\n    this._animationFrameID = null;\n    this._domNode = domNode;\n    this._onMove = onMove;\n    this._onMoveEnd = onMoveEnd;\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this._onMouseUp = this._onMouseUp.bind(this);\n    this._didMouseMove = this._didMouseMove.bind(this);\n  }\n\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n  _createClass(DOMMouseMoveTracker, [{\n    key: 'captureMouseMoves',\n    value: function captureMouseMoves( /*object*/event) {\n      if (!this._eventMoveToken && !this._eventUpToken) {\n        this._eventMoveToken = EventListener.listen(this._domNode, 'mousemove', this._onMouseMove);\n        this._eventUpToken = EventListener.listen(this._domNode, 'mouseup', this._onMouseUp);\n      }\n\n      if (!this._isDragging) {\n        this._deltaX = 0;\n        this._deltaY = 0;\n        this._isDragging = true;\n        this._x = event.clientX;\n        this._y = event.clientY;\n      }\n      event.preventDefault();\n    }\n\n    /**\n     * These releases all of the listeners on document.body.\n     */\n  }, {\n    key: 'releaseMouseMoves',\n    value: function releaseMouseMoves() {\n      if (this._eventMoveToken && this._eventUpToken) {\n        this._eventMoveToken.remove();\n        this._eventMoveToken = null;\n        this._eventUpToken.remove();\n        this._eventUpToken = null;\n      }\n\n      if (this._animationFrameID !== null) {\n        cancelAnimationFramePolyfill(this._animationFrameID);\n        this._animationFrameID = null;\n      }\n\n      if (this._isDragging) {\n        this._isDragging = false;\n        this._x = null;\n        this._y = null;\n      }\n    }\n\n    /**\n     * Returns whether or not if the mouse movement is being tracked.\n     */\n  }, {\n    key: 'isDragging',\n    value: function isDragging() /*boolean*/{\n      return this._isDragging;\n    }\n\n    /**\n     * Calls onMove passed into constructor and updates internal state.\n     */\n  }, {\n    key: '_onMouseMove',\n    value: function _onMouseMove( /*object*/event) {\n      var x = event.clientX;\n      var y = event.clientY;\n\n      this._deltaX += x - this._x;\n      this._deltaY += y - this._y;\n\n      if (this._animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        this._animationFrameID = requestAnimationFramePolyfill(this._didMouseMove);\n      }\n\n      this._x = x;\n      this._y = y;\n      event.preventDefault();\n    }\n  }, {\n    key: '_didMouseMove',\n    value: function _didMouseMove() {\n      this._animationFrameID = null;\n      this._onMove(this._deltaX, this._deltaY);\n      this._deltaX = 0;\n      this._deltaY = 0;\n    }\n\n    /**\n     * Calls onMoveEnd passed into constructor and updates internal state.\n     */\n  }, {\n    key: '_onMouseUp',\n    value: function _onMouseUp() {\n      if (this._animationFrameID) {\n        this._didMouseMove();\n      }\n      this._onMoveEnd();\n    }\n  }]);\n\n  return DOMMouseMoveTracker;\n})();\n\nmodule.exports = DOMMouseMoveTracker;"]},"metadata":{},"sourceType":"script"}