{"ast":null,"code":"var _jsxFileName = \"C:\\\\Versa\\\\pagination\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport './App.css';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        id: offset,\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData(this.state.sortKey);\n      });\n    };\n\n    this.sortBy = e => {\n      this.state.ascSort = this.state.ascSort ? 0 : 1;\n      this.state.ascSort;\n      this.receivedData(e);\n    };\n\n    this.state = {\n      id: 0,\n      offset: 0,\n      data: [],\n      perPage: 50,\n      currentPage: 0,\n      sortKey: \"code\",\n      ascSort: 1\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  receivedData(sortKey) {\n    axios.get(\"https://gist.githubusercontent.com/tdreyno/4278655/raw/7b0762c09b519f40397e4c3e100b097d861f5588/airports.json\").then(res => {\n      const data = res.data;\n\n      if (this.state.ascSort === 1) {\n        data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n      } else {\n        data.sort((b, a) => a[sortKey].localeCompare(b[sortKey]));\n      }\n\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n      const postData = slice.map(item => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 50\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, item.code ? item.code : \"###\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, item.name ? item.name : \"### airport\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, item.city ? item.city : \"### city\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, item.country ? item.country : \"### country\"))));\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage),\n        data: res.data,\n        sortKey: sortKey,\n        postData\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.receivedData(this.state.sortKey);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"JSON into Table With Pagination and Sort\"), /*#__PURE__*/React.createElement(\"table\", {\n      align: \"center\",\n      cellPadding: \"6\",\n      cellSpacing: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.sortBy('code'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Code \"), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.sortBy('name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.sortBy('city'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.sortBy('country'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Country\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, this.state.postData, /*#__PURE__*/React.createElement(ReactPaginate // previousLabel={\"<-\"}\n    // nextLabel={\"->\"}\n    // breakLabel={\"...\"}\n    // breakClassName={\"break-me\"}\n    , {\n      pageCount: this.state.pageCount // marginPagesDisplayed={2}\n      // pageRangeDisplayed={5}\n      ,\n      onPageChange: this.handlePageClick,\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Versa/pagination/src/App.js"],"names":["React","Component","axios","ReactPaginate","App","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","id","currentPage","receivedData","sortKey","sortBy","ascSort","data","bind","get","then","res","sort","a","b","localeCompare","slice","postData","map","item","code","name","city","country","pageCount","Math","ceil","length","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport ReactPaginate from 'react-paginate';\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : 0,\r\n            offset: 0,\r\n            data: [],\r\n            perPage: 50,\r\n            currentPage: 0,\r\n            sortKey : \"code\",\r\n            ascSort : 1\r\n        };\r\n        this.handlePageClick = this\r\n            .handlePageClick\r\n            .bind(this);\r\n    }\r\n    \r\n    receivedData(sortKey) {\r\n        axios.get(\"https://gist.githubusercontent.com/tdreyno/4278655/raw/7b0762c09b519f40397e4c3e100b097d861f5588/airports.json\")\r\n            .then(res => {\r\n              const data = res.data;\r\n              if(this.state.ascSort===1){ \r\n                data.sort((a,b) => a[sortKey].localeCompare(b[sortKey])) \r\n              }\r\n              else{ \r\n                data.sort((b,a) => a[sortKey].localeCompare(b[sortKey]))\r\n              }\r\n              const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n              const postData = slice.map(item => <React.Fragment>\r\n                  <tr key={item.code}>\r\n                    {/* <td>{++this.state.id}</td> */}\r\n                    <td>{item.code?item.code:\"###\"}</td>\r\n                    <td>{item.name?item.name:\"### airport\"}</td>\r\n                    <td>{item.city?item.city:\"### city\"}</td>\r\n                    <td>{item.country?item.country:\"### country\"}</td>\r\n                  </tr>\r\n                </React.Fragment>)\r\n\r\n              this.setState({\r\n                  pageCount: Math.ceil(data.length / this.state.perPage),                  \r\n                  data : res.data,\r\n                  sortKey : sortKey,\r\n                  postData\r\n              })              \r\n            })\r\n    }\r\n\r\n    handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        const offset = selectedPage * this.state.perPage;\r\n\r\n        this.setState({\r\n            id: offset,\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n        }, () => {\r\n            this.receivedData(this.state.sortKey)\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.receivedData(this.state.sortKey);\r\n    }\r\n\r\n    sortBy = (e) => {\r\n      this.state.ascSort = this.state.ascSort?0:1;\r\n      this.state.ascSort\r\n      this.receivedData(e);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div align=\"center\">\r\n              <h2>JSON into Table With Pagination and Sort</h2>\r\n              <table align=\"center\" cellPadding='6' cellSpacing='0'>\r\n                <thead> \r\n                  <tr>\r\n                    <td onClick={() => this.sortBy('code')}>Code {}</td>\r\n                    <td onClick={() => this.sortBy('name')}>Name</td>\r\n                    <td onClick={() => this.sortBy('city')}>City</td>\r\n                    <td onClick={() => this.sortBy('country')}>Country</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.postData}\r\n                  <ReactPaginate\r\n                      // previousLabel={\"<-\"}\r\n                      // nextLabel={\"->\"}\r\n                      // breakLabel={\"...\"}\r\n                      // breakClassName={\"break-me\"}\r\n                      pageCount={this.state.pageCount}\r\n                      // marginPagesDisplayed={2}\r\n                      // pageRangeDisplayed={5}\r\n                      onPageChange={this.handlePageClick}\r\n                      containerClassName={\"pagination\"}\r\n                      subContainerClassName={\"pages pagination\"}\r\n                      activeClassName={\"active\"}\r\n                  />\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}