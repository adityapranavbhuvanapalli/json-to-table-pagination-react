{"ast":null,"code":"/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This is to be used with the FixedDataTable. It is a read line\n * that when you click on a column that is resizable appears and allows\n * you to resize the corresponding column.\n *\n * @providesModule FixedDataTableColumnResizeHandle.react\n * @typechecks\n */\n'use strict';\n\nvar DOMMouseMoveTracker = require('./DOMMouseMoveTracker');\n\nvar Locale = require('./Locale');\n\nvar React = require('./React');\n\nvar createReactClass = require('create-react-class');\n\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\n\nvar clamp = require('./clamp');\n\nvar cx = require('./cx');\n\nvar PropTypes = require('prop-types');\n\nvar FixedDataTableColumnResizeHandle = createReactClass({\n  mixins: [ReactComponentWithPureRenderMixin],\n  propTypes: {\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * This is the height of the line\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Offset from left border of the table, please note\n     * that the line is a border on diff. So this is really the\n     * offset of the column itself.\n     */\n    leftOffset: PropTypes.number.isRequired,\n\n    /**\n     * Height of the clickable region of the line.\n     * This is assumed to be at the top of the line.\n     */\n    knobHeight: PropTypes.number.isRequired,\n\n    /**\n     * The line is a border on a diff, so this is essentially\n     * the width of column.\n     */\n    initialWidth: PropTypes.number,\n\n    /**\n     * The minimum width this dragger will collapse to\n     */\n    minWidth: PropTypes.number,\n\n    /**\n     * The maximum width this dragger will collapse to\n     */\n    maxWidth: PropTypes.number,\n\n    /**\n     * Initial click event on the header cell.\n     */\n    initialEvent: PropTypes.object,\n\n    /**\n     * When resizing is complete this is called.\n     */\n    onColumnResizeEnd: PropTypes.func,\n\n    /**\n     * Column key for the column being resized.\n     */\n    columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  },\n  getInitialState: function getInitialState()\n  /*object*/\n  {\n    return {\n      width: 0,\n      cursorDelta: 0\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(\n  /*object*/\n  newProps) {\n    if (newProps.initialEvent && !this._mouseMoveTracker.isDragging()) {\n      this._mouseMoveTracker.captureMouseMoves(newProps.initialEvent);\n\n      this.setState({\n        width: newProps.initialWidth,\n        cursorDelta: newProps.initialWidth\n      });\n    }\n  },\n  componentDidMount: function componentDidMount() {\n    this._mouseMoveTracker = new DOMMouseMoveTracker(this._onMove, this._onColumnResizeEnd, document.body);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this._mouseMoveTracker.releaseMouseMoves();\n\n    this._mouseMoveTracker = null;\n  },\n  render: function render()\n  /*object*/\n  {\n    var style = {\n      width: this.state.width,\n      height: this.props.height\n    };\n\n    if (Locale.isRTL()) {\n      style.right = this.props.leftOffset;\n    } else {\n      style.left = this.props.leftOffset;\n    }\n\n    return React.createElement('div', {\n      className: cx({\n        'fixedDataTableColumnResizerLineLayout/main': true,\n        'fixedDataTableColumnResizerLineLayout/hiddenElem': !this.props.visible,\n        'public/fixedDataTableColumnResizerLine/main': true\n      }),\n      style: style\n    }, React.createElement('div', {\n      className: cx('fixedDataTableColumnResizerLineLayout/mouseArea'),\n      style: {\n        height: this.props.height\n      }\n    }));\n  },\n  _onMove: function _onMove(\n  /*number*/\n  deltaX) {\n    if (Locale.isRTL()) {\n      deltaX = -deltaX;\n    }\n\n    var newWidth = this.state.cursorDelta + deltaX;\n    var newColumnWidth = clamp(newWidth, this.props.minWidth, this.props.maxWidth); // Please note cursor delta is the different between the currently width\n    // and the new width.\n\n    this.setState({\n      width: newColumnWidth,\n      cursorDelta: newWidth\n    });\n  },\n  _onColumnResizeEnd: function _onColumnResizeEnd() {\n    this._mouseMoveTracker.releaseMouseMoves();\n\n    this.props.onColumnResizeEnd(this.state.width, this.props.columnKey);\n  }\n});\nmodule.exports = FixedDataTableColumnResizeHandle;","map":{"version":3,"sources":["C:/Versa/pagination/node_modules/fixed-data-table/internal/FixedDataTableColumnResizeHandle.react.js"],"names":["DOMMouseMoveTracker","require","Locale","React","createReactClass","ReactComponentWithPureRenderMixin","clamp","cx","PropTypes","FixedDataTableColumnResizeHandle","mixins","propTypes","visible","bool","isRequired","height","number","leftOffset","knobHeight","initialWidth","minWidth","maxWidth","initialEvent","object","onColumnResizeEnd","func","columnKey","oneOfType","string","getInitialState","width","cursorDelta","componentWillReceiveProps","newProps","_mouseMoveTracker","isDragging","captureMouseMoves","setState","componentDidMount","_onMove","_onColumnResizeEnd","document","body","componentWillUnmount","releaseMouseMoves","render","style","state","props","isRTL","right","left","createElement","className","deltaX","newWidth","newColumnWidth","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This is to be used with the FixedDataTable. It is a read line\n * that when you click on a column that is resizable appears and allows\n * you to resize the corresponding column.\n *\n * @providesModule FixedDataTableColumnResizeHandle.react\n * @typechecks\n */\n\n'use strict';\n\nvar DOMMouseMoveTracker = require('./DOMMouseMoveTracker');\nvar Locale = require('./Locale');\nvar React = require('./React');\nvar createReactClass = require('create-react-class');\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\n\nvar clamp = require('./clamp');\nvar cx = require('./cx');\n\nvar PropTypes = require('prop-types');\n\nvar FixedDataTableColumnResizeHandle = createReactClass({\n  mixins: [ReactComponentWithPureRenderMixin],\n\n  propTypes: {\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * This is the height of the line\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Offset from left border of the table, please note\n     * that the line is a border on diff. So this is really the\n     * offset of the column itself.\n     */\n    leftOffset: PropTypes.number.isRequired,\n\n    /**\n     * Height of the clickable region of the line.\n     * This is assumed to be at the top of the line.\n     */\n    knobHeight: PropTypes.number.isRequired,\n\n    /**\n     * The line is a border on a diff, so this is essentially\n     * the width of column.\n     */\n    initialWidth: PropTypes.number,\n\n    /**\n     * The minimum width this dragger will collapse to\n     */\n    minWidth: PropTypes.number,\n\n    /**\n     * The maximum width this dragger will collapse to\n     */\n    maxWidth: PropTypes.number,\n\n    /**\n     * Initial click event on the header cell.\n     */\n    initialEvent: PropTypes.object,\n\n    /**\n     * When resizing is complete this is called.\n     */\n    onColumnResizeEnd: PropTypes.func,\n\n    /**\n     * Column key for the column being resized.\n     */\n    columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  },\n\n  getInitialState: function getInitialState() /*object*/{\n    return {\n      width: 0,\n      cursorDelta: 0\n    };\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps( /*object*/newProps) {\n    if (newProps.initialEvent && !this._mouseMoveTracker.isDragging()) {\n      this._mouseMoveTracker.captureMouseMoves(newProps.initialEvent);\n      this.setState({\n        width: newProps.initialWidth,\n        cursorDelta: newProps.initialWidth\n      });\n    }\n  },\n\n  componentDidMount: function componentDidMount() {\n    this._mouseMoveTracker = new DOMMouseMoveTracker(this._onMove, this._onColumnResizeEnd, document.body);\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this._mouseMoveTracker.releaseMouseMoves();\n    this._mouseMoveTracker = null;\n  },\n\n  render: function render() /*object*/{\n    var style = {\n      width: this.state.width,\n      height: this.props.height\n    };\n    if (Locale.isRTL()) {\n      style.right = this.props.leftOffset;\n    } else {\n      style.left = this.props.leftOffset;\n    }\n    return React.createElement(\n      'div',\n      {\n        className: cx({\n          'fixedDataTableColumnResizerLineLayout/main': true,\n          'fixedDataTableColumnResizerLineLayout/hiddenElem': !this.props.visible,\n          'public/fixedDataTableColumnResizerLine/main': true\n        }),\n        style: style },\n      React.createElement('div', {\n        className: cx('fixedDataTableColumnResizerLineLayout/mouseArea'),\n        style: { height: this.props.height }\n      })\n    );\n  },\n\n  _onMove: function _onMove( /*number*/deltaX) {\n    if (Locale.isRTL()) {\n      deltaX = -deltaX;\n    }\n    var newWidth = this.state.cursorDelta + deltaX;\n    var newColumnWidth = clamp(newWidth, this.props.minWidth, this.props.maxWidth);\n\n    // Please note cursor delta is the different between the currently width\n    // and the new width.\n    this.setState({\n      width: newColumnWidth,\n      cursorDelta: newWidth\n    });\n  },\n\n  _onColumnResizeEnd: function _onColumnResizeEnd() {\n    this._mouseMoveTracker.releaseMouseMoves();\n    this.props.onColumnResizeEnd(this.state.width, this.props.columnKey);\n  }\n});\n\nmodule.exports = FixedDataTableColumnResizeHandle;"]},"metadata":{},"sourceType":"script"}