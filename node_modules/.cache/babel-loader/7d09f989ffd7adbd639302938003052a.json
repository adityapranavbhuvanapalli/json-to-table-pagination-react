{"ast":null,"code":"var _jsxFileName = \"C:\\\\Versa\\\\pagination\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/tdreyno/4278655/raw/7b0762c09b519f40397e4c3e100b097d861f5588/airports.json\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } //Pagination\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      var id = 0; ///\n\n      function addPagerToTables(tables, rowsPerPage = 10) {\n        tables = typeof tables == \"string\" ? document.querySelectorAll(tables) : tables;\n\n        for (let table of tables) addPagerToTable(table, rowsPerPage);\n      }\n\n      function addPagerToTable(table, rowsPerPage = 10) {\n        let tBodyRows = table.querySelectorAll('tBody tr');\n        let numPages = Math.ceil(tBodyRows.length / rowsPerPage);\n        let colCount = [].slice.call(table.querySelector('tr').cells).reduce((a, b) => a + parseInt(b.colSpan), 0);\n        table.createTFoot().insertRow().innerHTML = `<td colspan=${colCount}><div class=\"nav\"></div></td>`;\n        if (numPages == 1) return;\n\n        for (i = 0; i < numPages; i++) {\n          let pageNum = i + 1;\n          table.querySelector('.nav').insertAdjacentHTML('beforeend', `<a href=\"#\" rel=\"${i}\">${pageNum}</a> `);\n        }\n\n        changeToPage(table, 1, rowsPerPage);\n\n        for (let navA of table.querySelectorAll('.nav a')) navA.addEventListener('click', e => changeToPage(table, parseInt(e.target.innerHTML), rowsPerPage));\n      }\n\n      function changeToPage(table, page, rowsPerPage) {\n        let startItem = (page - 1) * rowsPerPage;\n        let endItem = startItem + rowsPerPage;\n        let navAs = table.querySelectorAll('.nav a');\n        let tBodyRows = table.querySelectorAll('tBody tr');\n\n        for (let nix = 0; nix < navAs.length; nix++) {\n          if (nix == page - 1) navAs[nix].classList.add('active');else navAs[nix].classList.remove('active');\n\n          for (let trix = 0; trix < tBodyRows.length; trix++) tBodyRows[trix].style.display = trix >= startItem && trix < endItem ? 'table-row' : 'none';\n        }\n      } ///\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, \"JSON into Table\"), /*#__PURE__*/React.createElement(\"table\", {\n        align: \"center\",\n        cellPadding: \"6\",\n        cellSpacing: \"0\",\n        id: \"tb_res\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, \"Sl. No. \\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, \"Code\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"Country\")), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, ++id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, item.code), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, item.name ? item.name : \"Aditya Pranav Bhuvanapalli\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, item.city), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, item.country))))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Versa/pagination/src/App.js"],"names":["React","Component","App","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","id","addPagerToTables","tables","rowsPerPage","document","querySelectorAll","table","addPagerToTable","tBodyRows","numPages","Math","ceil","length","colCount","slice","call","querySelector","cells","reduce","a","b","parseInt","colSpan","createTFoot","insertRow","innerHTML","i","pageNum","insertAdjacentHTML","changeToPage","navA","addEventListener","e","target","page","startItem","endItem","navAs","nix","classList","add","remove","trix","style","display","map","item","code","name","city","country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://gist.githubusercontent.com/tdreyno/4278655/raw/7b0762c09b519f40397e4c3e100b097d861f5588/airports.json\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n  \r\n  //Pagination\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div align='center'>Error: {error.message}</div>;\r\n    } \r\n    else if (!isLoaded) {\r\n      return <div align=\"center\">Loading...</div>;\r\n    } \r\n    else { var id=0\r\n      \r\n      ///\r\n      function addPagerToTables(tables, rowsPerPage = 10) {\r\n\r\n          tables = \r\n              typeof tables == \"string\"\r\n            ? document.querySelectorAll(tables)\r\n            : tables;\r\n      \r\n          for (let table of tables) \r\n              addPagerToTable(table, rowsPerPage);\r\n      \r\n      }\r\n      \r\n      function addPagerToTable(table, rowsPerPage = 10) {\r\n      \r\n          let tBodyRows = table.querySelectorAll('tBody tr');\r\n          let numPages = Math.ceil(tBodyRows.length/rowsPerPage);\r\n      \r\n          let colCount = \r\n          [].slice.call(\r\n              table.querySelector('tr').cells\r\n          )\r\n          .reduce((a,b) => a + parseInt(b.colSpan), 0);\r\n      \r\n          table\r\n          .createTFoot()\r\n          .insertRow()\r\n          .innerHTML = `<td colspan=${colCount}><div class=\"nav\"></div></td>`;\r\n      \r\n          if(numPages == 1)\r\n              return;\r\n      \r\n          for(i = 0;i < numPages;i++) {\r\n      \r\n              let pageNum = i + 1;\r\n      \r\n              table.querySelector('.nav')\r\n              .insertAdjacentHTML(\r\n                  'beforeend',\r\n                  `<a href=\"#\" rel=\"${i}\">${pageNum}</a> `        \r\n              );\r\n      \r\n          }\r\n      \r\n          changeToPage(table, 1, rowsPerPage);\r\n      \r\n          for (let navA of table.querySelectorAll('.nav a'))\r\n              navA.addEventListener(\r\n                  'click', \r\n                  e => changeToPage(\r\n                      table, \r\n                      parseInt(e.target.innerHTML), \r\n                      rowsPerPage\r\n                  )\r\n              );\r\n      \r\n      }\r\n      \r\n      function changeToPage(table, page, rowsPerPage) {\r\n      \r\n          let startItem = (page - 1) * rowsPerPage;\r\n          let endItem = startItem + rowsPerPage;\r\n          let navAs = table.querySelectorAll('.nav a');\r\n          let tBodyRows = table.querySelectorAll('tBody tr');\r\n      \r\n          for (let nix = 0; nix < navAs.length; nix++) {\r\n      \r\n              if (nix == page - 1)\r\n                  navAs[nix].classList.add('active');\r\n              else \r\n                  navAs[nix].classList.remove('active');\r\n      \r\n              for (let trix = 0; trix < tBodyRows.length; trix++) \r\n                  tBodyRows[trix].style.display = \r\n                      (trix >= startItem && trix < endItem)\r\n                      ? 'table-row'\r\n                      : 'none';  \r\n      \r\n          }\r\n      \r\n      }\r\n      ///\r\n\r\n      return (\r\n        <div align=\"center\">\r\n          <h2>JSON into Table</h2>\r\n          <table align=\"center\" cellPadding='6' cellSpacing='0' id=\"tb_res\">\r\n            <thead> \r\n              <td>Sl. No. &nbsp;</td>\r\n              <td>Code</td>\r\n              <td>Name</td>\r\n              <td>City</td>\r\n              <td>Country</td>\r\n            </thead>\r\n            <tbody>\r\n              {items.map(item => (\r\n                <tr key={item.code}>\r\n                  <td>{++id}</td>\r\n                  <td>{item.code}</td>\r\n                  <td>{item.name?item.name:\"Aditya Pranav Bhuvanapalli\"}</td>\r\n                  <td>{item.city}</td>\r\n                  <td>{item.country}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}