{"ast":null,"code":"var _jsxFileName = \"C:\\\\Versa\\\\pagination\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/tdreyno/4278655/raw/7b0762c09b519f40397e4c3e100b097d861f5588/airports.json\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      var id = 0;\n      return /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: rowCount > 0 && numSelected === rowCount,\n        onChange: onSelectAllClick,\n        inputProps: {\n          'aria-label': 'select all desserts'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      })), headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n        key: headCell.id,\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'default',\n        sortDirection: orderBy === headCell.id ? order : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableSortLabel, {\n        active: orderBy === headCell.id,\n        direction: orderBy === headCell.id ? order : 'asc',\n        onClick: createSortHandler(headCell.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.visuallyHidden,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))))\n      /* Table without pagination and sort */\n      // <div align=\"center\">\n      //   <h2>JSON into Table</h2>\n      //   <table align=\"center\" cellPadding='6' cellSpacing='0'>\n      //     <thead> \n      //       <td>Sl. No. &nbsp;</td>\n      //       <td>Code</td>\n      //       <td>Name</td>\n      //       <td>City</td>\n      //       <td>Country</td>\n      //     </thead>\n      //     <tbody>\n      //       {items.map(item => (\n      //         <tr key={item.code}>\n      //           <td>{++id}</td>\n      //           <td>{item.code}</td>\n      //           <td>{item.name?item.name:\"Aditya Pranav Bhuvanapalli\"}</td>\n      //           <td>{item.city}</td>\n      //           <td>{item.country}</td>\n      //         </tr>\n      //       ))}\n      //     </tbody>\n      //   </table>\n      // </div>\n      ;\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Versa/pagination/src/App.js"],"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","App","constructor","props","state","error","isLoaded","items","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","componentDidMount","fetch","then","res","json","result","setState","render","message","id","numSelected","rowCount","onSelectAllClick","headCells","headCell","numeric","disablePadding","createSortHandler","label","classes","visuallyHidden"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/tdreyno/4278655/raw/7b0762c09b519f40397e4c3e100b097d861f5588/airports.json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  \n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div align='center'>Error: {error.message}</div>;\n    } \n    else if (!isLoaded) {\n      return <div align=\"center\">Loading...</div>;\n    } \n    else { var id=0\n      return (\n\n        <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n\n        /* Table without pagination and sort */\n        // <div align=\"center\">\n        //   <h2>JSON into Table</h2>\n        //   <table align=\"center\" cellPadding='6' cellSpacing='0'>\n        //     <thead> \n        //       <td>Sl. No. &nbsp;</td>\n        //       <td>Code</td>\n        //       <td>Name</td>\n        //       <td>City</td>\n        //       <td>Country</td>\n        //     </thead>\n        //     <tbody>\n        //       {items.map(item => (\n        //         <tr key={item.code}>\n        //           <td>{++id}</td>\n        //           <td>{item.code}</td>\n        //           <td>{item.name?item.name:\"Aditya Pranav Bhuvanapalli\"}</td>\n        //           <td>{item.city}</td>\n        //           <td>{item.country}</td>\n        //         </tr>\n        //       ))}\n        //     </tbody>\n        //   </table>\n        // </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}